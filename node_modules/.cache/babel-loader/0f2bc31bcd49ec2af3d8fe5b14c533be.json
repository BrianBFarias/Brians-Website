{"ast":null,"code":"var _jsxFileName = \"/Users/brian/Brians-Website/src/components/MainSection.js\";\nimport React, { useEffect } from \"react\";\nimport '../App.css';\nimport './MainSection.css';\nfunction MainSection() {\n  var isMobile = /Mobi/.test(navigator.userAgent);\n\n  // useEffect(() => {\n  //   const starField = document.getElementById('star-field');\n  //   const starFieldWidth = window.innerWidth+10;\n  //   const starFieldHeight = window.innerHeight * 0.55;\n  //   var app = document.getElementById('name');\n\n  //   const noOfStars = starFieldWidth < 960 ? 70 : 200;\n\n  //   addStars(starField, starFieldWidth, starFieldHeight, noOfStars);\n  //   animateStars(starField, starFieldWidth, -1);\n  // }, []);\n\n  // function addStars(starField, starFieldWidth, starFieldHeight, noOfStars) {\n  //   const fragment = document.createDocumentFragment();\n\n  //   for (let i = 0; i < noOfStars; i+=3) {\n  //     const star = document.createElement('div');\n  //     star.className = 'star';\n  //     const topOffset = Math.floor((Math.random() * starFieldHeight) + 1);\n  //     const leftOffset = Math.floor((Math.random() * starFieldWidth) + 1);\n  //     star.style.top = topOffset + 'px';\n  //     star.style.left = leftOffset + 'px';\n  //     star.style.position = 'absolute';\n  //     fragment.appendChild(star);\n  //   }\n\n  //   starField.appendChild(fragment);\n  // }\n\n  // function animateStars(starField, starFieldWidth, speed) {\n  //   const stars = starField.childNodes;\n\n  //   function getBobbingOffset(index) {\n  //     return Math.sin(index);\n  //   }\n\n  //   function updateStarPosition(star, i) {\n  //     star.className = 'star ' + getStarColor(i) + ' ' + getStarDistance(i);\n\n  //     const currentLeft = parseInt(star.style.left, 10);\n  //     const currentTop = parseInt(star.style.top, 10);\n\n  //     const leftChangeAmount = speed + getStarRelativeSpeed(i);\n  //     const leftDiff = (currentLeft - leftChangeAmount + starFieldWidth) % starFieldWidth;\n\n  //     const bobbingOffset = getBobbingOffset(i);\n  //     const topOffset = currentTop + bobbingOffset;\n\n  //     if (topOffset < 0) {\n  //       star.style.top = window.innerHeight + Math.random() * 20 + 'px';\n  //       star.style.left = Math.floor(Math.random() * starFieldWidth) + 'px';\n  //     } else {\n  //       star.style.left = leftDiff + 'px';\n  //       star.style.top = topOffset + 'px';\n  //     }\n  //   }\n\n  //   function animate(){\n  //     for (let i = 1; i < stars.length; i++) {\n  //       updateStarPosition(stars[i], i);\n  //     }\n\n  //     requestAnimationFrame(animate);\n  //   }\n  //   animate();\n  // }\n\n  // function getStarColor(index) {\n  //   if (index % 8 === 0)\n  //     return 'red';\n  //   else if (index % 10 === 0)\n  //     return 'yellow';\n  //   else if (index % 17 === 0)\n  //     return 'blue';\n  //   else\n  //     return 'white';\n  // }\n\n  // function getStarDistance(index) {\n  //   if (index % 6 === 0)\n  //     return '';\n  //   else if (index % 9 === 0)\n  //     return 'near';\n  //   else if (index % 2 === 0)\n  //     return 'far';\n  //   else\n  //     return 0;\n  // }\n\n  // function getStarRelativeSpeed(index) {\n  //   if (index % 6 === 0)\n  //     return 1;\n  //   else if (index % 9 === 0)\n  //     return 2;\n  //   else if (index % 2 === 0)\n  //     return -1;\n  //   else\n  //     return 0;\n  // }\n\n  if (isMobile) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"star-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      id: \"mob-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, \"Hello I'm Brian\"));\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"star-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, \"div\", /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, \"Hello I'm Brian\"));\n}\nexport default MainSection;","map":{"version":3,"names":["React","useEffect","MainSection","isMobile","test","navigator","userAgent","createElement","id","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Fragment"],"sources":["/Users/brian/Brians-Website/src/components/MainSection.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport '../App.css';\nimport './MainSection.css';\n\nfunction MainSection() {\n  const isMobile = /Mobi/.test(navigator.userAgent);\n\n  // useEffect(() => {\n  //   const starField = document.getElementById('star-field');\n  //   const starFieldWidth = window.innerWidth+10;\n  //   const starFieldHeight = window.innerHeight * 0.55;\n  //   var app = document.getElementById('name');\n\n  //   const noOfStars = starFieldWidth < 960 ? 70 : 200;\n\n  //   addStars(starField, starFieldWidth, starFieldHeight, noOfStars);\n  //   animateStars(starField, starFieldWidth, -1);\n  // }, []);\n\n  // function addStars(starField, starFieldWidth, starFieldHeight, noOfStars) {\n  //   const fragment = document.createDocumentFragment();\n\n  //   for (let i = 0; i < noOfStars; i+=3) {\n  //     const star = document.createElement('div');\n  //     star.className = 'star';\n  //     const topOffset = Math.floor((Math.random() * starFieldHeight) + 1);\n  //     const leftOffset = Math.floor((Math.random() * starFieldWidth) + 1);\n  //     star.style.top = topOffset + 'px';\n  //     star.style.left = leftOffset + 'px';\n  //     star.style.position = 'absolute';\n  //     fragment.appendChild(star);\n  //   }\n\n  //   starField.appendChild(fragment);\n  // }\n\n  // function animateStars(starField, starFieldWidth, speed) {\n  //   const stars = starField.childNodes;\n\n  //   function getBobbingOffset(index) {\n  //     return Math.sin(index);\n  //   }\n\n  //   function updateStarPosition(star, i) {\n  //     star.className = 'star ' + getStarColor(i) + ' ' + getStarDistance(i);\n\n  //     const currentLeft = parseInt(star.style.left, 10);\n  //     const currentTop = parseInt(star.style.top, 10);\n\n  //     const leftChangeAmount = speed + getStarRelativeSpeed(i);\n  //     const leftDiff = (currentLeft - leftChangeAmount + starFieldWidth) % starFieldWidth;\n\n  //     const bobbingOffset = getBobbingOffset(i);\n  //     const topOffset = currentTop + bobbingOffset;\n\n  //     if (topOffset < 0) {\n  //       star.style.top = window.innerHeight + Math.random() * 20 + 'px';\n  //       star.style.left = Math.floor(Math.random() * starFieldWidth) + 'px';\n  //     } else {\n  //       star.style.left = leftDiff + 'px';\n  //       star.style.top = topOffset + 'px';\n  //     }\n  //   }\n\n  //   function animate(){\n  //     for (let i = 1; i < stars.length; i++) {\n  //       updateStarPosition(stars[i], i);\n  //     }\n\n  //     requestAnimationFrame(animate);\n  //   }\n  //   animate();\n  // }\n\n  // function getStarColor(index) {\n  //   if (index % 8 === 0)\n  //     return 'red';\n  //   else if (index % 10 === 0)\n  //     return 'yellow';\n  //   else if (index % 17 === 0)\n  //     return 'blue';\n  //   else\n  //     return 'white';\n  // }\n\n  // function getStarDistance(index) {\n  //   if (index % 6 === 0)\n  //     return '';\n  //   else if (index % 9 === 0)\n  //     return 'near';\n  //   else if (index % 2 === 0)\n  //     return 'far';\n  //   else\n  //     return 0;\n  // }\n\n  // function getStarRelativeSpeed(index) {\n  //   if (index % 6 === 0)\n  //     return 1;\n  //   else if (index % 9 === 0)\n  //     return 2;\n  //   else if (index % 2 === 0)\n  //     return -1;\n  //   else\n  //     return 0;\n  // }\n\n  if(isMobile){\n    return (\n      <div id='star-field'>\n        <h1 id=\"mob-name\">\n          Hello I'm Brian\n        </h1>\n      </div>\n    );\n  }\n\n  return (\n    <div id='star-field'>\n      div<></>\n      <h1 id=\"name\">\n        Hello I'm Brian\n      </h1>\n    </div>\n  );\n}\n\nexport default MainSection;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,YAAY;AACnB,OAAO,mBAAmB;AAE1B,SAASC,WAAWA,CAAA,EAAG;EACrB,IAAMC,QAAQ,GAAG,MAAM,CAACC,IAAI,CAACC,SAAS,CAACC,SAAS,CAAC;;EAEjD;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;;EAEA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,IAAGH,QAAQ,EAAC;IACV,oBACEH,KAAA,CAAAO,aAAA;MAAKC,EAAE,EAAC,YAAY;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAClBd,KAAA,CAAAO,aAAA;MAAIC,EAAE,EAAC,UAAU;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAC,iBAEd,CACD,CAAC;EAEV;EAEA,oBACEd,KAAA,CAAAO,aAAA;IAAKC,EAAE,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,KAChB,eAAAd,KAAA,CAAAO,aAAA,CAAAP,KAAA,CAAAe,QAAA,MAAI,CAAC,eACRf,KAAA,CAAAO,aAAA;IAAIC,EAAE,EAAC,MAAM;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,iBAEV,CACD,CAAC;AAEV;AAEA,eAAeZ,WAAW"},"metadata":{},"sourceType":"module"}