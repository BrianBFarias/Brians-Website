{"ast":null,"code":"var _jsxFileName = \"/Users/brian/Brians-Website/src/components/MainSection.js\";\nimport React, { useState, useEffect } from \"react\";\nimport '../App.css';\nimport './MainSection.css';\nimport Typewriter from 'typewriter-effect';\nfunction MainSection() {\n  var starFieldWidth = window.innerWidth;\n  var starFieldHeight = window.innerHeight * .55;\n  var demoDiv = document.querySelector(\"#star-field\");\n  useEffect(function () {\n    addStars(starFieldWidth, starFieldHeight, 150);\n    animateStars(starFieldWidth, 5);\n  }, []);\n\n  // TODO: make some stars bigger than others, and have some blue,\n  // red or white\n  function addStars(starFieldWidth, starFieldHeight, noOfStars) {\n    var starField = document.getElementById('star-field');\n    var numberOfStars = noOfStars;\n    for (var i = 0; i < numberOfStars; i++) {\n      var star = document.createElement('div');\n      star.className = 'star';\n      var topOffset = Math.floor(Math.random() * starFieldHeight + 1);\n      var leftOffset = Math.floor(Math.random() * starFieldWidth + 1);\n      star.style.top = topOffset + 'px';\n      star.style.left = leftOffset + 'px';\n      star.style.position = 'absolute';\n      starField.appendChild(star);\n    }\n  }\n  function animateStars(starFieldWidth, speed) {\n    var starField = document.getElementById('star-field');\n    var stars = starField.childNodes;\n    function getBobbingOffset(index) {\n      // Use sine function to create a bobbing effect\n      return Math.sin(index) / 10; // You can adjust the amplitude (5 in this case) for the bobbing effect\n    }\n\n    function getStarColor(index) {\n      if (index % 8 == 0) return 'red';else if (index % 10 == 0) return 'yellow';else if (index % 17 == 0) return 'blue';else return 'white';\n    }\n    function getStarDistance(index) {\n      if (index % 6 == 0) return '';else if (index % 9 == 0) return 'near';else if (index % 2 == 0) return 'far';else return 0;\n    }\n    function getStarRelativeSpeed(index) {\n      if (index % 6 == 0) return 1;else if (index % 9 == 0) return 2;else if (index % 2 == 0) return -1;else return 0;\n    }\n    setInterval(function () {\n      for (var i = 1; i < stars.length; i++) {\n        stars[i].className = 'star ' + getStarColor(i) + ' ' + getStarDistance(i);\n        var currentLeft = parseInt(stars[i].style.left, 10);\n        var currentTop = parseInt(stars[i].style.top, 10);\n        var leftChangeAmount = speed + getStarRelativeSpeed(i);\n        var leftDiff = (currentLeft - leftChangeAmount + starFieldWidth) % starFieldWidth;\n        var bobbingOffset = getBobbingOffset(i);\n        var topOffset = currentTop + bobbingOffset;\n\n        // Reset star position if it goes beyond the top edge\n        if (topOffset < 0) {\n          topOffset = starFieldHeight + Math.random() * 20; // Adjust 20 to control the initial position of re-entering stars\n          leftDiff = Math.floor(Math.random() * starFieldWidth);\n        }\n        stars[i].style.left = leftDiff + 'px';\n        stars[i].style.top = topOffset + 'px';\n      }\n    }, 20);\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"star-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typewriter, {\n    options: {\n      strings: [\"Hello, I'm Brian\"],\n      autoStart: true,\n      loop: false,\n      delay: 100,\n      pauseFor: 999999\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  })));\n}\nexport default MainSection;","map":{"version":3,"names":["React","useState","useEffect","Typewriter","MainSection","starFieldWidth","window","innerWidth","starFieldHeight","innerHeight","demoDiv","document","querySelector","addStars","animateStars","noOfStars","starField","getElementById","numberOfStars","i","star","createElement","className","topOffset","Math","floor","random","leftOffset","style","top","left","position","appendChild","speed","stars","childNodes","getBobbingOffset","index","sin","getStarColor","getStarDistance","getStarRelativeSpeed","setInterval","length","currentLeft","parseInt","currentTop","leftChangeAmount","leftDiff","bobbingOffset","id","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","options","strings","autoStart","loop","delay","pauseFor"],"sources":["/Users/brian/Brians-Website/src/components/MainSection.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport '../App.css';\nimport './MainSection.css';\nimport Typewriter from 'typewriter-effect';\n\nfunction MainSection() {\n  var starFieldWidth = window.innerWidth;\n  var starFieldHeight = window.innerHeight*.55;\n\n  const demoDiv = document.querySelector(\"#star-field\");\n  \n  useEffect(()=>{\n    addStars(starFieldWidth, starFieldHeight, 150);\n    animateStars(starFieldWidth, 5);\n  },[]);\n  \n  // TODO: make some stars bigger than others, and have some blue,\n// red or white\nfunction addStars(starFieldWidth, starFieldHeight, noOfStars) {\n  var starField = document.getElementById('star-field');\n  var numberOfStars = noOfStars;\n  \n  for (var i = 0; i < numberOfStars; i++) {\n    var star = document.createElement('div');\n  \tstar.className = 'star';\n    var topOffset = Math.floor((Math.random() * starFieldHeight) + 1);\n    var leftOffset = Math.floor((Math.random() * starFieldWidth) + 1);\n    star.style.top = topOffset + 'px';\n    star.style.left = leftOffset + 'px';\n    star.style.position = 'absolute';\n  \tstarField.appendChild(star);\n  }\n}\n\nfunction animateStars(starFieldWidth, speed) {\n  var starField = document.getElementById('star-field');\n  var stars = starField.childNodes;\n\n  function getBobbingOffset(index) {\n    // Use sine function to create a bobbing effect\n    return Math.sin(index)/10; // You can adjust the amplitude (5 in this case) for the bobbing effect\n  }\n  \n  function getStarColor(index) {\n    if (index % 8 == 0)\n      return 'red';\n    else if (index % 10 == 0)\n      return 'yellow';\n    else if (index % 17 == 0)\n      return 'blue';\n    else\n      return 'white';\n  }\n  \n  function getStarDistance(index) {\n    if (index % 6 == 0)\n      return '';\n    else if (index % 9 == 0)\n      return 'near';\n    else if (index % 2 == 0)\n      return 'far';\n    else\n      return 0;\n  }\n  \n  function getStarRelativeSpeed(index) {\n    if (index % 6 == 0)\n      return 1;\n    else if (index % 9 == 0)\n      return 2;\n    else if (index % 2 == 0)\n      return -1;\n    else\n      return 0;\n  }\n  \n  setInterval(function() {\n    for (var i = 1; i < stars.length; i++) {\n      stars[i].className = 'star ' + getStarColor(i) + ' ' + getStarDistance(i);\n\n      var currentLeft = parseInt(stars[i].style.left, 10);\n      var currentTop = parseInt(stars[i].style.top, 10);\n\n      var leftChangeAmount = speed + getStarRelativeSpeed(i);\n      var leftDiff = (currentLeft - leftChangeAmount + starFieldWidth) % starFieldWidth;\n\n      var bobbingOffset = getBobbingOffset(i);\n      var topOffset = currentTop + bobbingOffset;\n\n      // Reset star position if it goes beyond the top edge\n      if (topOffset < 0) {\n        topOffset = starFieldHeight + Math.random() * 20; // Adjust 20 to control the initial position of re-entering stars\n        leftDiff = Math.floor(Math.random() * starFieldWidth);\n      }\n\n      stars[i].style.left = leftDiff + 'px';\n      stars[i].style.top = topOffset + 'px';\n    }\n    \n  }, 20);\n  \n}\n\n  return (\n    <div id='star-field'>\n      <h1 id=\"name\">            \n      <Typewriter\n              options={{\n                strings: [\"Hello, I'm Brian\"],\n                autoStart: true,\n                loop: false,\n                delay: 100,\n                pauseFor: 999999\n              }}\n            /></h1>\n    </div>\n  );\n}\n\nexport default MainSection;"],"mappings":"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"},"metadata":{},"sourceType":"module"}