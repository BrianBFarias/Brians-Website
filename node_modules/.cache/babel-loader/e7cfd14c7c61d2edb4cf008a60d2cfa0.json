{"ast":null,"code":"var _jsxFileName = \"/Users/brian/Brians-Website/src/components/MainSection.js\";\nimport React, { useEffect } from \"react\";\nimport '../App.css';\nimport './MainSection.css';\nimport Typewriter from 'typewriter-effect';\nfunction MainSection() {\n  useEffect(function () {\n    var starField = document.getElementById('star-field');\n    var starFieldWidth = window.innerWidth + 10;\n    var starFieldHeight = window.innerHeight * 0.55;\n    var noOfStars = starFieldWidth < 960 ? 50 : 99;\n    addStars(starField, starFieldWidth, starFieldHeight, noOfStars);\n    animateStars(starField, starFieldWidth, 5);\n\n    // Clean up function\n    return function () {\n      // Any necessary cleanup code\n    };\n  }, []);\n  function addStars(starField, starFieldWidth, starFieldHeight, noOfStars) {\n    var fragment = document.createDocumentFragment();\n    for (var i = 0; i < noOfStars; i++) {\n      var star = document.createElement('div');\n      star.className = 'star';\n      var topOffset = Math.floor(Math.random() * starFieldHeight + 1);\n      var leftOffset = Math.floor(Math.random() * starFieldWidth + 1);\n      star.style.top = topOffset + 'px';\n      star.style.left = leftOffset + 'px';\n      star.style.position = 'absolute';\n      fragment.appendChild(star);\n    }\n    starField.appendChild(fragment);\n  }\n  function animateStars(starField, starFieldWidth, speed) {\n    var stars = starField.childNodes;\n    function getBobbingOffset(index) {\n      return Math.sin(index) / 10;\n    }\n    function updateStarPosition(star, i) {\n      star.className = 'star ' + getStarColor(i) + ' ' + getStarDistance(i);\n      var currentLeft = parseInt(star.style.left, 10);\n      var currentTop = parseInt(star.style.top, 10);\n      var leftChangeAmount = speed + getStarRelativeSpeed(i);\n      var leftDiff = (currentLeft - leftChangeAmount + starFieldWidth) % starFieldWidth;\n      var bobbingOffset = getBobbingOffset(i);\n      var topOffset = currentTop + bobbingOffset;\n      if (topOffset < 0) {\n        star.style.top = window.innerHeight * 0.55 + Math.random() * 20 + 'px';\n        star.style.left = Math.floor(Math.random() * starFieldWidth) + 'px';\n      } else {\n        star.style.left = leftDiff + 'px';\n        star.style.top = topOffset + 'px';\n      }\n    }\n    function animate() {\n      for (var i = 1; i < stars.length; i++) {\n        updateStarPosition(stars[i], i);\n      }\n      requestAnimationFrame;\n    }\n    animate();\n  }\n  function getStarColor(index) {\n    if (index % 8 === 0) return 'red';else if (index % 10 === 0) return 'yellow';else if (index % 17 === 0) return 'blue';else return 'white';\n  }\n  function getStarDistance(index) {\n    if (index % 6 === 0) return '';else if (index % 9 === 0) return 'near';else if (index % 2 === 0) return 'far';else return 0;\n  }\n  function getStarRelativeSpeed(index) {\n    if (index % 6 === 0) return 1;else if (index % 9 === 0) return 2;else if (index % 2 === 0) return -1;else return 0;\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"star-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typewriter, {\n    options: {\n      strings: [\"Hello, I'm Brian\"],\n      autoStart: true,\n      loop: false,\n      delay: 100,\n      pauseFor: 999999\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  })));\n}\nexport default MainSection;","map":{"version":3,"names":["React","useEffect","Typewriter","MainSection","starField","document","getElementById","starFieldWidth","window","innerWidth","starFieldHeight","innerHeight","noOfStars","addStars","animateStars","fragment","createDocumentFragment","i","star","createElement","className","topOffset","Math","floor","random","leftOffset","style","top","left","position","appendChild","speed","stars","childNodes","getBobbingOffset","index","sin","updateStarPosition","getStarColor","getStarDistance","currentLeft","parseInt","currentTop","leftChangeAmount","getStarRelativeSpeed","leftDiff","bobbingOffset","animate","length","requestAnimationFrame","id","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","options","strings","autoStart","loop","delay","pauseFor"],"sources":["/Users/brian/Brians-Website/src/components/MainSection.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport '../App.css';\nimport './MainSection.css';\nimport Typewriter from 'typewriter-effect';\n\nfunction MainSection() {\n  useEffect(() => {\n    const starField = document.getElementById('star-field');\n    const starFieldWidth = window.innerWidth+10;\n    const starFieldHeight = window.innerHeight * 0.55;\n\n    const noOfStars = starFieldWidth < 960 ? 50 : 99;\n\n    addStars(starField, starFieldWidth, starFieldHeight, noOfStars);\n    animateStars(starField, starFieldWidth, 5);\n\n    // Clean up function\n    return () => {\n      // Any necessary cleanup code\n    };\n  }, []);\n\n  function addStars(starField, starFieldWidth, starFieldHeight, noOfStars) {\n    const fragment = document.createDocumentFragment();\n\n    for (let i = 0; i < noOfStars; i++) {\n      const star = document.createElement('div');\n      star.className = 'star';\n      const topOffset = Math.floor((Math.random() * starFieldHeight) + 1);\n      const leftOffset = Math.floor((Math.random() * starFieldWidth) + 1);\n      star.style.top = topOffset + 'px';\n      star.style.left = leftOffset + 'px';\n      star.style.position = 'absolute';\n      fragment.appendChild(star);\n    }\n\n    starField.appendChild(fragment);\n  }\n\n  function animateStars(starField, starFieldWidth, speed) {\n    const stars = starField.childNodes;\n\n    function getBobbingOffset(index) {\n      return Math.sin(index) / 10;\n    }\n\n    function updateStarPosition(star, i) {\n      star.className = 'star ' + getStarColor(i) + ' ' + getStarDistance(i);\n\n      const currentLeft = parseInt(star.style.left, 10);\n      const currentTop = parseInt(star.style.top, 10);\n\n      const leftChangeAmount = speed + getStarRelativeSpeed(i);\n      const leftDiff = (currentLeft - leftChangeAmount + starFieldWidth) % starFieldWidth;\n\n      const bobbingOffset = getBobbingOffset(i);\n      const topOffset = currentTop + bobbingOffset;\n\n      if (topOffset < 0) {\n        star.style.top = window.innerHeight * 0.55 + Math.random() * 20 + 'px';\n        star.style.left = Math.floor(Math.random() * starFieldWidth) + 'px';\n      } else {\n        star.style.left = leftDiff + 'px';\n        star.style.top = topOffset + 'px';\n      }\n    }\n\n    function animate() {\n      for (let i = 1; i < stars.length; i++) {\n        updateStarPosition(stars[i], i);\n      }\n\nrequestAnimationFrame    }\n\n    animate();\n  }\n\n  function getStarColor(index) {\n    if (index % 8 === 0)\n      return 'red';\n    else if (index % 10 === 0)\n      return 'yellow';\n    else if (index % 17 === 0)\n      return 'blue';\n    else\n      return 'white';\n  }\n\n  function getStarDistance(index) {\n    if (index % 6 === 0)\n      return '';\n    else if (index % 9 === 0)\n      return 'near';\n    else if (index % 2 === 0)\n      return 'far';\n    else\n      return 0;\n  }\n\n  function getStarRelativeSpeed(index) {\n    if (index % 6 === 0)\n      return 1;\n    else if (index % 9 === 0)\n      return 2;\n    else if (index % 2 === 0)\n      return -1;\n    else\n      return 0;\n  }\n\n  return (\n    <div id='star-field'>\n      <h1 id=\"name\">\n        <Typewriter\n          options={{\n            strings: [\"Hello, I'm Brian\"],\n            autoStart: true,\n            loop: false,\n            delay: 100,\n            pauseFor: 999999\n          }}\n        />\n      </h1>\n    </div>\n  );\n}\n\nexport default MainSection;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}